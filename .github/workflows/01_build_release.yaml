name: Flutter CI

on:
  push:
    tags:
      - "*"

jobs:
  build-and-release-linux:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          architecture: x64
      - name: Update dependencies
        run: sudo apt-get update && sudo add-apt-repository universe
      - name: Install dependencies
        run: sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-0 libgtk-3-dev libblkid1 liblzma5
      - name: uninstall old gstreamer
        run: sudo apt-get install libgstreamer1.0-0 gstreamer1.0-plugins-base
      - name: Install gstreamer
        run: sudo apt-get install libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-bad1.0-dev gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly gstreamer1.0-libav gstreamer1.0-tools gstreamer1.0-x gstreamer1.0-alsa gstreamer1.0-gl gstreamer1.0-gtk3 gstreamer1.0-qt5 gstreamer1.0-pulseaudio
      - name: Install project dependencies
        run: flutter pub get
      - name: Enable linux build
        run: flutter config --enable-linux-desktop
      - name: Build artifacts
        run: flutter build linux --release
      - name: Build Appimage
        run: bash ./dev/github_linux_appimage_build.sh
      - name: Compress action step
        run:  tar  -C build/linux/x64/release/bundle -cf speaksharp-linux.tar.gz ./
      - name: Linux Release
        uses: actions/upload-artifact@v4
        with:
          name: speaksharp-linux
          path: speaksharp-linux.tar.gz
#      - name: decode key base64
#        run: echo $KEYSTORE_BASE64 | base64 -di > ./android/app/speaksharp.jks
#        env:
#          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '17.x'
      - name: Build android
        run: |
          flutter build apk --release
          flutter build apk --release --split-per-abi
#        env:
#          KEYSTORE: speaksharp.jks
#          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
#          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
#          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD}}
      - name: Android Release
        uses: actions/upload-artifact@v4
        with:
          name: speaksharp-android
          path: build/app/outputs/flutter-apk


  build-and-release-windows:
    runs-on: windows-latest
    steps:
      - name: check current path
        run: cd
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          architecture: x64
      - name: Install project dependencies
        run: flutter pub get
      - name: Enable windows build
        run: flutter config --enable-windows-desktop
      - name: Build artifacts
        run: flutter build windows --release
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: install dev
        run: npm install enigmavirtualbox -g
      - name: create dev file
        run: dart dev\windows_evb_config_generator.dart
      - name: build single exe file
        run: enigmavirtualbox cli "speaksharp.evb"
      - name: Windows Release
        uses: actions/upload-artifact@v4
        with:
          name: speaksharp-win
          path: speaksharp.exe

  build-and-release-macos:
    runs-on: macos-14

    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          architecture: arm64
      - name: Install project dependencies
        run: flutter pub get
      - name: Enable macOS build
        run: flutter config --enable-macos-desktop
      - name: Build artifacts
        run: flutter build macos --release
      - name: install npm
        run: /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
      - name: install appdmg
        run: npm install -g appdmg
      - name: build dmg
        run: appdmg ./dmg/config.json ./build/macos/Build/Products/Release/speaksharp.dmg
      - name: macOS Release
        uses: actions/upload-artifact@v4
        with:
          name: speaksharp-macos
          path: build/macos/Build/Products/Release/speaksharp.dmg
      - name: Build ios
        run: |
          flutter build ios --release --no-codesign
          ln -sf ./build/ios/iphoneos Payload
          zip -r9 speaksharp-release.ipa Payload/runner.app
      - name: ios Release
        uses: actions/upload-artifact@v4
        with:
          name: speaksharp-ios
          path: speaksharp-release.ipa



  upload:
    runs-on: ubuntu-latest
    permissions: write-all
    needs:
      - build-and-release-linux
      - build-and-release-windows
      - build-and-release-macos
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: ./speaksharp-release
          merge-multiple: true
      - name: Install dependenciesw
        run: sudo apt-get install tree -y
      - name: Upload Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          omitBodyDuringUpdate: true
          omitNameDuringUpdate: true
          omitPrereleaseDuringUpdate: true
          allowUpdates: true
          artifacts: speaksharp-release/*